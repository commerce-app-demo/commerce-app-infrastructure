name: Terraform Google Artifact Registry
on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  push:
    branches: [main]

jobs:
  terraform:
    permissions:
      contents: read 
      pull-requests: write
      id-token: write
    runs-on: ubuntu-latest
    env:
      tf_actions_working_dir: ./modules/google-artifact-registry
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with: 
          terraform_version: 1.6.0
          
      - name: Terraform fmt
        working-directory: ${{ env.tf_actions_working_dir }}
        id: fmt
        run: terraform fmt -check
        continue-on-error: true
        
      - name: Terraform init
        working-directory: ${{ env.tf_actions_working_dir }}
        id: init
        run: terraform init -input=false
        
      - name: Terraform validate
        working-directory: ${{ env.tf_actions_working_dir }}
        id: validate
        run: terraform validate
        
      - name: Auth
        uses: google-github-actions/auth@v2
        with: 
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}
          
      - name: Terraform plan
        if: github.event_name == 'pull_request'
        working-directory: ${{ env.tf_actions_working_dir }}
        id: plan
        run: terraform plan
        
      - name: Terraform plan and apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        working-directory: ${{ env.tf_actions_working_dir }}
        run: |
          terraform plan -out=tfplan
          terraform apply tfplan
          
      - name: Comment PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            <details><summary>Validation Output</summary>
            \`\`\`\n
            ${{ steps.validate.outputs.stdout }}
            \`\`\`
            </details>
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            <details><summary>Show Plan</summary>
            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`
            </details>
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })